plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'io.github.juuxel.loom-quiltflower' version '1.8.0'
    id "io.freefair.lombok" version "6.6"

    id 'maven-publish'
    id "com.modrinth.minotaur" version "2.+"
}

def ENV = System.getenv()
def build_number = ENV.BUILD_NUMBER ?: "unknown"

version = "${project.mod_version}+${project.minecraft_version}" + (ENV.PUBLISH_RELEASE ? "" : "-build.${build_number}")
group = project.maven_group

loom {
    accessWidenerPath = file("src/main/resources/ukulib.accesswidener") as RegularFile
}

repositories {
    maven {
        url "https://maven.uku3lig.net/releases"
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    include implementation("com.moandjiezana.toml:toml4j:0.7.2")
    include implementation("gs.mclo.java:mclogs-java:2.1.1")
    include modImplementation(fabricApi.module("fabric-resource-loader-v0", project.fabric_version))
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set(targetJavaVersion)
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name

    withSourcesJar()
    withJavadocJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

if (System.getenv("PUBLISH_RELEASE") != null) {
    publish.finalizedBy "modrinth"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            name = "UkuReleases"
            url "https://maven.uku3lig.net/releases"
            credentials {
                username = "uku"
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
        maven {
            name = "UkuSnapshots"
            url = "https://maven.uku3lig.net/snapshots"
            credentials {
                username = "uku"
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
    }
}

modrinth {
    token = System.getenv("MODRINTH_TOKEN")
    projectId = "Y8uFrUil"
    versionNumber = project.version
    versionType = "release"
    uploadFile = remapJar // With Loom, this MUST be set to `remapJar` instead of `jar`!
    gameVersions = [project.minecraft_version] // Must be an array, even with only one version
}
